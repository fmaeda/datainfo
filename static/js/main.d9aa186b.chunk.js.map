{"version":3,"sources":["components/UploadForm/styled.ts","model/index.ts","components/MesButton/styled.ts","components/MesButton/index.tsx","components/Datagrid/styled.ts","components/Datagrid/index.tsx","components/UploadForm/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Mes","Container","styled","div","DropArea","FiltrosContainer","mesLabels","JANEIRO","FEVEREIRO","MARCO","ABRIL","MAIO","JUNHO","JULHO","AGOSTO","SETEMBRO","OUTUBRO","NOVEMBRO","DEZEMBRO","active","this","props","onClick","filtro","mes","ano","React","Component","Table","table","handleClick","horario","evt","copy","element","target","style","marcacoes","largestRow","Math","max","Object","values","map","v","length","titles","Array","from","k","_v","idx","key","entries","sort","k1","k2","localeCompare","data","horarios","h","state","filtrosMes","usuarios","mesSelecionado","usuarioSelecionado","marcacoesSelecionadas","handleDrop","files","file","reader","FileReader","onload","e","a","text","result","rawData","toString","split","filter","l","nome","substring","trim","pis","reduce","acc","some","u","includes","u1","u2","hora","setState","readAsText","handleUserChange","console","log","value","find","currDate","Date","getFullYear","getMonth","padStart","renderUserSelect","onChange","handleMesClick","fromEntries","renderFiltros","f","renderData","onDrop","getRootProps","getInputProps","App","styles","css","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d9aa186b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const DropArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: dashed gray;\n  border-radius: 8px;\n  width: 40vw;\n  height: 40vh;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nexport const FiltrosContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 20px;\n`;\n","export type Marcacoes = {\n  [data: string]: string[];\n};\n\nexport type Usuario = {\n  nome: string;\n  pis: string;\n}\n\nexport type FiltroMes = {\n  ano: number;\n  mes: Mes;\n};\n\nexport enum Mes {\n  JANEIRO = '01',\n  FEVEREIRO = '02',\n  MARCO = '03',\n  ABRIL = '04',\n  MAIO = '05',\n  JUNHO = '06',\n  JULHO = '07',\n  AGOSTO = '08',\n  SETEMBRO = '09',\n  OUTUBRO = '10',\n  NOVEMBRO = '11',\n  DEZEMBRO = '12',\n}\n\nexport const mesLabels: {[key in Mes]: string } = {\n  [Mes.JANEIRO]: 'Janeiro',\n  [Mes.FEVEREIRO]: 'Fevereiro',\n  [Mes.MARCO]: 'Mar√ßo',\n  [Mes.ABRIL]: 'Abril',\n  [Mes.MAIO]: 'Maio',\n  [Mes.JUNHO]: 'Junho',\n  [Mes.JULHO]: 'Julho',\n  [Mes.AGOSTO]: 'Agosto',\n  [Mes.SETEMBRO]: 'Setembro',\n  [Mes.OUTUBRO]: 'Outubro',\n  [Mes.NOVEMBRO]: 'Novembro',\n  [Mes.DEZEMBRO]: 'Dezembro',\n};\n","import styled from '@emotion/styled';\n\ntype Props = {\n  active: boolean;\n};\nexport const Container = styled.div<Props>`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  border: solid lightgray 1px;\n  border-radius: 4px;\n  margin: 0 8px;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease-in-out;\n  padding: 8px;\n  background: ${({ active }) => active ? 'silver' : 'unset'};\n\n  > span {\n    font-size: 12px;\n    :first-child {\n      font-size: 20px;\n    }\n  }\n\n  :hover {\n    background: silver;\n  }\n`;\n","import React from 'react';\nimport { mesLabels, FiltroMes } from '../../model';\nimport { Container } from './styled';\n\ntype Props = {\n  filtro: FiltroMes;\n  active: boolean;\n  onClick: (mes: FiltroMes) => void;\n};\n\nexport default class extends React.Component<Props> {\n  render() {\n    const { active, onClick, filtro } = this.props;\n\n    return (\n      <Container active={active} onClick={() => onClick(filtro)}>\n        <span>{mesLabels[filtro.mes]}</span>\n        <span>{filtro.ano}</span>\n      </Container>\n    )\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Table = styled.table`\n  flex: 1;\n  th {\n    background: lightgray;\n    padding: 4px 8px;\n    min-width: 80px;\n  }\n  td {\n    padding: 4px 8px;\n    cursor: copy;\n  }\n`;\n","import React from \"react\";\nimport copy from 'clipboard-copy';\nimport { Marcacoes } from \"../../model\";\nimport { Table } from \"./styled\";\n\ntype Props = {\n  marcacoes: Marcacoes;\n};\n\nexport default class extends React.Component<Props> {\n  handleClick = (horario: string) => (evt: React.MouseEvent<HTMLTableDataCellElement>) => {\n    copy(horario);\n    const element = (evt.target as any);\n    if (element.style['background-color'] === 'tomato') {\n      element.style='background-color: transparent';\n    } else {\n      element.style='background-color: tomato';\n    }\n  };\n\n  render() {\n    const { marcacoes } = this.props;\n    const largestRow = Math.max(...Object.values(marcacoes).map(v => v.length));\n\n    const titles = Array.from({ length: largestRow }, (v, k) =>\n      k % 2 === 0 ? \"Entrada\" : \"Sa√≠da\"\n    );\n    return largestRow > 0 && (\n      <Table>\n        <thead>\n          <tr>\n            <th>Data</th>\n            {titles.map((_v, idx) => (\n              <th key={`head_${idx}`}>{idx % 2 === 0 ? \"Entrada\" : \"Sa√≠da\"}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(marcacoes)\n            .sort(([k1], [k2]) => k1.localeCompare(k2))\n            .map(([data, horarios]) => (\n              <tr key={`r_${data}`}>\n                <th>{data}</th>\n                {horarios.map(h => (\n                  <td key={`h_${h}`} onClick={this.handleClick(h)}>{h}</td>\n                ))}\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    );\n  }\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { Marcacoes, Usuario, FiltroMes, Mes } from \"../../model\";\nimport { Container, DropArea, FiltrosContainer } from \"./styled\";\nimport MesButton from \"../MesButton\";\nimport Datagrid from \"../Datagrid\";\n\ntype Props = {};\n\ntype State = {\n  filtrosMes: FiltroMes[];\n  mesSelecionado: FiltroMes | null;\n  usuarioSelecionado: Usuario | null;\n  usuarios: Usuario[];\n  marcacoes: {\n    [pis: string]: Marcacoes;\n  };\n  marcacoesSelecionadas: Marcacoes;\n};\n\nexport default class extends React.Component<Props, State> {\n  state: State = {\n    filtrosMes: [],\n    usuarios: [],\n    mesSelecionado: null,\n    usuarioSelecionado: null,\n    marcacoes: {},\n    marcacoesSelecionadas: {}\n  };\n\n  handleDrop = (files: File[]) => {\n    const [file] = files;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const text = e.target?.result;\n      const rawData = text?.toString().split(\"\\n\");\n      const usuarios =\n        rawData\n          ?.filter(l => l.length === 107)\n          .map(l => ({\n            nome: l.substring(35, 87).trim(),\n            pis: l.substring(23, 35)\n          }))\n          .reduce((acc: Usuario[], v) => {\n            if (acc.some(u => u.pis === v.pis)) {\n              return acc;\n            }\n            return [...acc, v];\n          }, [])\n          .filter(u => !u.pis.includes(\"0000\"))\n          .sort((u1, u2) => u1.nome.localeCompare(u2.nome)) ?? [];\n\n      const marcacoes =\n        rawData\n          ?.filter(l => l.length === 39)\n          .map(l => ({\n            pis: l.substring(22, 34),\n            data: `${l.substring(10, 12)}/${l.substring(12, 14)}/${l.substring(\n              14,\n              18\n            )}`,\n            hora: `${l.substring(18, 20)}:${l.substring(20, 22)}`\n          }))\n          // .filter(l => l.data.includes(\"02/2020\"))\n          .reduce(\n            (acc: { [pis: string]: Marcacoes }, { pis, data, hora }) => ({\n              ...acc,\n              [pis]: {\n                ...(acc[pis] ?? []),\n                [data]: [...((acc[pis] ?? [])[data] ?? []), hora]\n              }\n            }),\n            {}\n          ) ?? {};\n\n      this.setState({\n        usuarios,\n        marcacoes\n      });\n    };\n    reader.readAsText(file);\n  };\n\n  handleUserChange = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n    console.log(\"change\", evt.target.value);\n    const { usuarios, marcacoes } = this.state;\n    const { value } = evt.target;\n\n    const usuarioSelecionado = usuarios.find(u => u.pis === value) ?? null;\n    this.setState({\n      usuarioSelecionado\n    });\n\n    if (usuarioSelecionado) {\n      const currDate = new Date();\n      const ano = currDate.getFullYear();\n      const mes = currDate.getMonth() + 1;\n\n      const filtrosMes = [\n        {\n          mes: (mes === 1 ? 12 : mes - 1).toString().padStart(2, \"0\") as Mes,\n          ano: mes === 1 ? ano - 1 : ano\n        },\n        {\n          mes: mes.toString().padStart(2, \"0\") as Mes,\n          ano\n        }\n      ];\n\n      // console.log('filtros', filtrosMes);\n      // const marcacoesSelecionadas = Object.fromEntries(\n      //   Object.entries(marcacoes[usuarioSelecionado.pis]).filter(\n      //     ([k]) => k.endsWith(ano.toString()) || k.endsWith(`12/${ano - 1}`)\n      //   )\n      // );\n\n      this.setState({\n        marcacoesSelecionadas: {},\n        filtrosMes\n      });\n    }\n  };\n\n  renderUserSelect = (usuarios: Usuario[]) => {\n    return (\n      <select onChange={this.handleUserChange}>\n        <option />\n        {usuarios.map(({ nome, pis }) => (\n          <option value={pis} key={`opt_${pis}`}>\n            {nome}\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  handleMesClick = (filtro: FiltroMes) => {\n    console.log(\"mes\", filtro);\n    const { marcacoes, usuarioSelecionado } = this.state;\n    if (usuarioSelecionado) {\n      const marcacoesSelecionadas = Object.fromEntries(\n        Object.entries(marcacoes[usuarioSelecionado.pis]).filter(([data]) =>\n          data.includes(`/${filtro.mes}/`)\n        )\n      );\n\n      console.log(\"marcacoesSelecionadas\", marcacoesSelecionadas);\n\n      this.setState({\n        mesSelecionado: filtro,\n        marcacoesSelecionadas,\n      });\n    }\n  };\n\n  renderFiltros = () => {\n    const { filtrosMes, mesSelecionado } = this.state;\n    return (\n      <FiltrosContainer>\n        {filtrosMes.map(f => (\n          <MesButton\n            key={`btn_${f.ano + f.mes}`}\n            onClick={this.handleMesClick}\n            active={mesSelecionado === f}\n            filtro={f}\n          />\n        ))}\n      </FiltrosContainer>\n    );\n  };\n\n  renderData = () => {\n    const { marcacoesSelecionadas } = this.state;\n\n    return <Datagrid marcacoes={marcacoesSelecionadas} />;\n  };\n\n  render() {\n    const { usuarios } = this.state;\n\n    return (\n      <Container>\n        {usuarios.length === 0 ? (\n          <Dropzone onDrop={this.handleDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <DropArea {...getRootProps()}>\n                <input {...getInputProps()} />\n                <p>Arraste o arquivo</p>\n              </DropArea>\n            )}\n          </Dropzone>\n        ) : (\n          <>\n            {this.renderUserSelect(usuarios)}\n            {this.renderFiltros()}\n            {this.renderData()}\n          </>\n        )}\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Global, css } from \"@emotion/core\";\nimport UploadForm from \"./components/UploadForm\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Global\n        styles={css`\n          body {\n            display: flex;\n            flex-direction: column;\n            width: 100vw;\n            height: 100vh;\n            background: white;\n          }\n          #root {\n            display: flex;\n            flex-direction: column;\n            flex: 1;\n            background: white;\n          }\n        `}\n      />\n      <UploadForm />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}